module cc(clock,reset,in,S);
input clock,reset;
input [3:0]in;
output [7:0]S;
wire [7:0]S;
reg [3:0]tmp;

always@(posedge clock or posedge reset)
begin

if(reset)
	tmp=4'b0000;
else
	tmp=tmp+in;

end

ss ss(.a(tmp), .r(S));


endmodule


module ss(a,r);
input [3:0]a;
output [7:0]r;
reg [7:0]r;
always@(a)
begin
case(a)
4'b0000:r=8'b11111100;
4'b0001:r=8'b01100000;
4'b0010:r=8'b11011010;
4'b0011:r=8'b11110010;
4'b0100:r=8'b01100110;
4'b0101:r=8'b10110110;
4'b0110:r=8'b10111110;
4'b0111:r=8'b11100000;
4'b1000:r=8'b11111110;
4'b1001:r=8'b11110110;
4'b1010:r=8'b11101110;
4'b1011:r=8'b00111110;
4'b1100:r=8'b10011100;
4'b1101:r=8'b01111010;
4'b1110:r=8'b10011110;
4'b1111:r=8'b10001110;
endcase
end

endmodule