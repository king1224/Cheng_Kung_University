#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        
        bis.b #00110000b,&P2DIR
        bic.b #00110000b,&P2SEL
        bic.b #00110000b,&P2OUT
        bis.b #00100000b,&P2OUT
        
LOOP:
        mov.w #400,R5
L1:
        mov.w #30000,R6
L2:
        mov.w #50,R7
L3:
        dec.b R7
        jnz   L3
        dec.b R6
        jnz   L2
        xor.b #00010000b,&P2OUT
        sub.w #1,R5
        jnz   L1
        xor.b #00100000b,&P2OUT
jmp LOOP
        
        
        
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)
        END